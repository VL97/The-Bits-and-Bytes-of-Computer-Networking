*  The Network Layer
---------------------

-> In LAN - nodes can communicate with each other through their physical MAC addressses - works well on small scale and switches can learn the MAC addresses connected to each other port to forward transmission;
-> Every single network interface has a unique MAC address and are not ordered in a systematic way, hence no way of knowing the location of MAC address at any point of time - not ideal for communicating long distances;
- The nodes learn about each other through physical addressing that isn't translatable to anything besides a single network subnet;
- An alternate solution is the IP;

* IP Addresses
----------------

-> IP addresses are 32-bit long numbers made up of 4 octets, and each octet is described in decimal numbers.
    172.16.254.1   -> 10101100 . 00010000 . 11111110 . 00000001  -> 4 bytes - 32 bits; (0-255) -> Dotted Decimal Notation;

-> IP Addresses are distributed in large sections to various organizations and companies instead of being determined by hardware vendors - IP addresses are 
more hierarchical and easier to store data than physical addresses;

-> IP addresses belong to networks, not to devices attached to those networks;

-> A Laptop will have the same MAC address whereever it is by an IP address will differ - home network, cafe network, etc, the LAN at a home network or 
internet cafe will each be individually responsible to handing out an IP address;

-> Dynamic Host Configuration Protocol (DHCP) - enables to add a new host to the network, or add an IP addressto a host newly added to the network - 
this is termed as Dynamic IP Address; The other alternative is Static IP Address(Configured on a node manually);

-> In most cases, static IP addresses are reserved for servers and network devices, while dynamic IP addresses are reserved for clients;

* IP Datagram and Encapsulation
-----------------------------------

In general:
            IP DATAGRAM =  IP HEADER + TCP HEADER + MESSAGE


----------------------------------------------------------------------------------------------------------------------------------------
-> Encapsulation -> 

                                                 -----------------
                                                 |     Message    |   -------------------------------- Application
                                                 ------------------
                                                         |
                                                         |
                                -----------------------------------
                                | TCP/UDP Header |     Message    |  -------------------------------- Transport
                                -----------------------------------
                                                         |
                                                         |
                   ------------------------------------------------                               
                   | IP HEADER  | TCP/UDP Header |     Message    | --------------------------------- Network          ====-=-=-=-=-=>[IP DATAGRAM]
                   ------------------------------------------------
                                                         |
                                                         |
 -----------------------------------------------------------------------------------                             
 | ETHERNET HEADER | IP HEADER  | TCP/UDP Header |     Message    | ETHERNET FOOTER| ---------------- Data-link       ====-=-=-=-=-=-=>[ETHERNET FRAME]  
 -----------------------------------------------------------------------------------

----------------------------------------------------------------------------------------------------------------------------------------

IP Datagram:
- packet of the network layer -> IP Datagram;
- IP datagram - A highly structured series of fields that are strictly defined;
- 2 primary sections of a IP datagram are Header and Payload;


<---------------------------------4 BYTES------------------------------------>

0          4               8             16           19                    31
-----------------------------------------------------------------------------
| Version  | Header Length | Service Type |         Total Length            |
-----------------------------------------------------------------------------
|            Identification               |    Flags   |   Fragment Offset  |
-----------------------------------------------------------------------------
|         TTL              | Protocol     |     Header Checksum             |
-----------------------------------------------------------------------------
|                               Source IP Address                           |
-----------------------------------------------------------------------------
|                               Destination IP Address                      |
-----------------------------------------------------------------------------
|                         Options                            | Padding      |
-----------------------------------------------------------------------------


1. Version - IPv4, IPv6; 4 - bit
2. Header Length - 4 bit - length of the entire header; (20 bytes len - IPv4 )
           HEADER LENGTH = LENGTH OF IP HEADER = IP HEADER
           
3. Service Type - 8 bits - specify the Quality Of Service - QoS technologies - could also prioritize IP Datagrams;
4. Total Length - 16 bits - Indicate the total length of the IP datagram IN BYTES:
            LENGTH = LENGTH OF IP DATAGRAM =  IP HEADER + TCP HEADER + MESSAGE
    Since Length above is of 16 bits: max length of IP DATAGRAM can be 2^16-1: 65,535 (bytes)

5. Identification - 16 bit number used to group messages together;
  The maximum size of a single IP datagram is the largest number that can be represented with 16 bits; 65,535;
  If the total amount of data from above layer that needs to be sent is larger that what can fit a single datagram (ie 65535-20 assuming 20 byte IP header), 
  the IP layer needs to split the data up into many individual packets and the identification number will be the same for the packets to 
  ensure the receiving ends understands its all a part of the same transaction;

6. Flag - used to indicate if a datagram is allowed to be fragmented or to indicate the datagram has been fragmented already;
7. Fragmentation - Process of taking a singlr IP datagram and splitting it up into several smaller datagrams;

8. TTL - Time ot Live - 8 bit, indicates how many ROUTER hops(NO NON-ROUTER NODES!) a datagram can traverse before it's thrown away;
   As a datagram hops from one router to another each router decrements the TTL value by 1, and it's forwarded until it reaches 0, 
   thereafter it is discarded this prevents looping;
9. Protocol - 8 bit, contains data about the transport layer protocol being used - TCP/UDP;

10. Header checksum field - A checksum of the contents of the entire IP datagram header (consistency check only for the IP header!).
    Note each layer strips the lower layer's header. So, IP layer is responsible for checking the consistency of the IP header. If it finds
    inconsistent IP header so no need to send it to higher levels, discard it now itself.
    For purposes of computing the checksum, the value of the checksum field is zero. If there is no corruption, the result of summing 
    the entire IP header, including checksum, should be zero. At each hop, the checksum is verified. Packets with checksum mismatch are discarded. 
    The router must adjust the checksum if it changes the IP header (such as when decrementing the TTL).
    
11. Source IP Address - 32 bit;
12. Destination IP Address - 32 bit;
13. Options - An optional field and is used to set special characteristics for datagrams primarily for testing purpose;
14. Padding - Series of 0's to ensure the header is the correct total size;


* IP Address Classes
--------------------
-> Ip addresses can be split into 2 sections - network ID and the host ID; 
-> Address Class System - A way of defining how a global IP address space is split up;
-> 3 primary types of address classes 
  * Class A - 1st octet - Network ID, last three are used for Host ID; begin 0 ; 0 - 126  | 16 Million hosts ; 
  * Class B - first two octets - Network ID, second two are used for the Host ID; begins with 10 ; 128 - 191 | 6400 Hosts ; 
  * Class C - first three octets - Network ID, last octet - Host ID; begins with 110 ; 192 - 223 | 254 Hosts ;
  * Class D - Begin with 1110 - used for multicasting - how a single IP datagram can be sent to an entire network at once ; 224 - 239;
  * Class E - Unassigned and used for testing purposes - 240 - 255;
  
-> This class system has been replaced by CIDR (Classless inter-domain routing);

* Address Resolution Protocol (ARP)
-------------------------------------
-> IP addresses are used at the Network Layer. However we will need the receiver's MAC address to fill the ethernet header in the data-link layer.
    We use the ARP table for it.
    
-> ARP table - A map of IP Addresses and the MAC addresses associated with them;

-> ARP - A protocol used to discover the hardware address of a node with certain IP address; 
       - Using the data in the ARP table the destination MAC address is seeked. If entry is not in ARP table then 
         the transmitting device sends a broadcast ARP message via the destination MAC address which is FF:FF:FF:FF:FF:FF - These are delivered to 
         all computers on a local network and the desired receiver computer (which will have the matching IP address as the destination IP address
         in the ARP packet) will respond back with a ARP response - that contains the MAC address for the network interface. This is updated into the ARP table.

-> ARP table entries generally expire after short amount of time to ensure changes in the network are accounted;
